/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.ListIterator;
import javapop.Cliente;
import javapop.ClienteProfesional;
import javapop.Producto;
import javapop.Utilidades;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author mark_
 */
public class VentanaAdministradorProductos extends javax.swing.JFrame {

    private ArrayList<Producto> proaux;
    private ListIterator<Producto> li;
    private Producto objpro;

    private ArrayList<Cliente> procli;

    private ArrayList<ClienteProfesional> proclip;

    /**
     * Constructor sin parametros.
     */
    public VentanaAdministradorProductos() {
        initComponents();
        BufferedImage image = null;
        try {
            image = ImageIO.read(new File("..\\Javapop\\src\\main\\java\\imagenes\\logotipo.png"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "La imagen no se ha podido cargar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        setIconImage(image);
        Titulo.setText(Utilidades.getTituloAplicacion());
        Fecha.setText(Utilidades.getFechaActual());
        setTitle(Utilidades.getTitulo());
        this.setVisible(true);
        consultarTodo();
    }

    /**
     * Metodo que consulta los datos que tenemos de todos los productos y los
     * guarda en un ListIterator, para que despues compruebe si esta vacio y si
     * no , entonces que los muestre.
     */
    private void consultarTodo() {
        try {
            proaux = Utilidades.getProductos();
            li = proaux.listIterator();

            if (proaux.size() < 1) {
                JOptionPane.showMessageDialog(this, "No hay productos", "Error", JOptionPane.INFORMATION_MESSAGE);
                siguiente.setEnabled(false);
                anterior.setEnabled(false);
                baja.setEnabled(false);
            } else {
                siguiente.setEnabled(true);
                anterior.setEnabled(true);
                baja.setEnabled(true);

            }
            if (li.hasNext()) {
                objpro = (Producto) li.next();
            }
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error:" + e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
            System.out.println("Erro:" + e.toString());
        }
    }

    /**
     * Metodo que muestra todos los productos con sus caracteristicas.
     *
     * @param pro producto que se va a mostrar.
     */
    private void presenta(Producto pro) {
        PanelProductos.titulo.setText(pro.getTitulo());
        PanelProductos.descripcion.setText(pro.getDescripcion());
        PanelProductos.categoria.setText(pro.getCategoria());
        PanelProductos.estado.setText(pro.getEstadoProducto());
        PanelProductos.precio.setText(String.valueOf(pro.getPrecioProducto()));
        PanelProductos.codigo_postal.setText(String.valueOf(pro.getUbicacion()));

        ImageIcon imagen1 = new ImageIcon("..\\Javapop\\src\\main\\java\\imagenes\\" + pro.getImagen());
        Icon icono = new ImageIcon(imagen1.getImage().getScaledInstance(PanelProductos.imagen.getWidth(), PanelProductos.imagen.getHeight(), Image.SCALE_DEFAULT));
        PanelProductos.imagen.setIcon(icono);

        PanelProductos.urgente.setSelected((pro.isUrgente()));
        PanelProductos.vendedor.setText(pro.getVendedor());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        Fecha = new javax.swing.JLabel();
        Cerrar = new javax.swing.JButton();
        jLabelNombre = new javax.swing.JLabel();
        baja = new javax.swing.JButton();
        panelProductos = new ventanas.PanelProductos();
        anterior = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Usuarios = new javax.swing.JMenu();
        ListadoU = new javax.swing.JMenuItem();
        Ventas = new javax.swing.JMenu();
        Mostrar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Titulo.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Titulo.setText("Javapop");
        Titulo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        Fecha.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        Fecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Fecha.setText("FechaActual");

        Cerrar.setBackground(new java.awt.Color(255, 51, 51));
        Cerrar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Cerrar.setText("Guardar y Salir");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        jLabelNombre.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabelNombre.setText("PRODUCTOS");

        baja.setBackground(new java.awt.Color(0, 102, 153));
        baja.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        baja.setText("Baja");
        baja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bajaActionPerformed(evt);
            }
        });

        anterior.setBackground(new java.awt.Color(0, 255, 51));
        anterior.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        anterior.setText("Ant");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });

        siguiente.setBackground(new java.awt.Color(0, 255, 51));
        siguiente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        siguiente.setText("Sig");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });

        Usuarios.setText("Usuarios");
        Usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuariosActionPerformed(evt);
            }
        });

        ListadoU.setText("Listado");
        ListadoU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListadoUActionPerformed(evt);
            }
        });
        Usuarios.add(ListadoU);

        jMenuBar1.add(Usuarios);

        Ventas.setText("Ventas");

        Mostrar.setText("Mostrar");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });
        Ventas.add(Mostrar);

        jMenuBar1.add(Ventas);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(319, 319, 319)
                                .addComponent(Cerrar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(anterior)
                        .addGap(174, 174, 174)
                        .addComponent(siguiente))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(baja)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Fecha)
                        .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addComponent(panelProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(baja)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cerrar)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(anterior)
                            .addComponent(siguiente))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Nos envia a la ventana principal del administrador, donde estan todos los
     * usuarios.
     *
     * @param evt
     */
    private void ListadoUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListadoUActionPerformed
        // TODO add your handling code here:
        VentanaAdministrador v = new VentanaAdministrador();
        this.dispose();
        v.setVisible(true);
    }//GEN-LAST:event_ListadoUActionPerformed
    /**
     * Cierra la aplicacion y guarda todos los datos.
     *
     * @param evt
     */
    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        // TODO add your handling code here:
        Utilidades.guardarDatosCliente();
        Utilidades.guardarDatosClienteProfesional();
        Utilidades.guardarDatosProducto();
        this.dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    private void UsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsuariosActionPerformed
    /**
     * Recorrer hacia atras el LisIterator con los productos y mostrarlo.
     *
     * @param evt
     */
    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        // TODO add your handling code here:
        if (li.hasPrevious()) {
            objpro = li.previous();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_anteriorActionPerformed
    /**
     * Recorrer hacia adelante el LisIterator con los productos y mostrarlo.
     *
     * @param evt
     */
    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        // TODO add your handling code here:
        if (li.hasNext()) {
            objpro = li.next();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos", "Error", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_siguienteActionPerformed
    /**
     * Metodo para dar de baja a un producto que tiene el cliente,recorremos los
     * clientes y comprobamos quien tiene el mismo dni con el del vendedor del
     * producto,despues llama al metodo del cliente para dar de baja y el
     * parametro del producto a dar de baja.
     *
     * @param evt
     */
    private void bajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bajaActionPerformed
        // TODO add your handling code here:
        if (objpro != null) {
            procli = Utilidades.getClientes();
            proclip = Utilidades.getClientesProfesionales();
            for (int i = 0; i < procli.size(); i++) {
                if (procli.get(i).getDni().equals(objpro.getVendedor())) {
                    procli.get(i).bajaProductoCliente(objpro);
                }
            }
            for (int i = 0; i < proclip.size(); i++) {
                if (proclip.get(i).getDni().equals(objpro.getVendedor())) {
                    proclip.get(i).bajaProductoCliente(objpro);
                }
            }
            li.remove();
            JOptionPane.showMessageDialog(this, objpro.getTitulo() + " " + "se ha dado de baja correctamente!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No se ha encontrado el producto!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
        if (li.hasNext()) {
            objpro = (Producto) li.next();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (li.hasPrevious()) {
            objpro = (Producto) li.previous();
            if (objpro != null) {
                presenta(objpro);
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_bajaActionPerformed
    /**
     * Nos lleva a las ventas que se han realizado en la aplicacion.
     *
     * @param evt
     */
    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        // TODO add your handling code here:
        VentanaAdministradorVentas v = new VentanaAdministradorVentas();
        this.dispose();
        v.setVisible(true);
    }//GEN-LAST:event_MostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministradorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministradorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministradorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministradorProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAdministradorProductos().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton Cerrar;
    private javax.swing.JLabel Fecha;
    private javax.swing.JMenuItem ListadoU;
    private javax.swing.JMenuItem Mostrar;
    private javax.swing.JLabel Titulo;
    private javax.swing.JMenu Usuarios;
    private javax.swing.JMenu Ventas;
    javax.swing.JButton anterior;
    javax.swing.JButton baja;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JMenuBar jMenuBar1;
    private ventanas.PanelProductos panelProductos;
    javax.swing.JButton siguiente;
    // End of variables declaration//GEN-END:variables

}
